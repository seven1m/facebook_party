= FacebookParty

I needed a simple wrapper for the Facebook REST API. HTTParty to the rescue!

<tt>method_missing</tt> magic is used to handle any api method available now and in the future.

== Installation

    sudo gem install facebook_party

== Usage

    fb = FacebookParty(API_KEY, SECRET)
    # call this method: http://wiki.developers.facebook.com/index.php/Auth.createToken
    response = fb.auth.createToken

== Feedback

I'd love to hear from you if you have suggestions for improvement, bug fixes,
or whatever. Email me at tim@timmorgan.org or fork the project and send a
pull request.

To run the tests, do this:

    FACEBOOK_API_KEY="YOURKEY" \
    FACEBOOK_API_SECRET="YOURSECRET" \
    ruby -rrubygems test/facebook_party_test.rb

== Simple Auth

By far the easiest way I've found to do simple server-side auth
is to use the <tt>auth_url</tt> method of FacebookParty.
Send the user to the returned url. Once authenticated and authorized,
the user will be redirected to the specified <tt>next_url</tt>, and
details including the <tt>session_key</tt> will be included in the
url parameters.

== License

The MIT License

Copyright (c) 2010 Tim Morgan

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
